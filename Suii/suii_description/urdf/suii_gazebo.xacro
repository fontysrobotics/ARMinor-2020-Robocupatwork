<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">

  <xacro:macro name="suii_gazebo" params="prefix">

    <gazebo reference="${prefix}base_link">
      <selfCollide>true</selfCollide>
      <kinematic>true</kinematic>
    </gazebo>
    <gazebo reference="${prefix}ur3_mount_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}left_front_wheel">
      <selfCollide>true</selfCollide>
      <collision>
        <surface>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
    </gazebo>
    <gazebo reference="${prefix}left_back_wheel">
      <selfCollide>true</selfCollide>
      <collision>
        <surface>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
    </gazebo>
    <gazebo reference="${prefix}right_front_wheel">
      <selfCollide>true</selfCollide>
      <collision>
        <surface>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
    </gazebo>
    <gazebo reference="${prefix}right_back_wheel">
      <selfCollide>true</selfCollide>
      <collision>
        <surface>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
    </gazebo>
    
    <gazebo reference="${prefix}bottum_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}shoulder_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}upper_arm_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}forearm_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_1_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_3_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_2_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}ee_link">
      <selfCollide>true</selfCollide>
    </gazebo>

    <!-- hokuyo -->
    <gazebo reference="hokuyo_link_back">
      <sensor type="gpu_ray" name="head_hokuyo_sensor_back">
        <pose>0.244 0.168 0.15 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>1080</samples>
              <resolution>1</resolution>
              <min_angle>-2.35619449</min_angle>
              <max_angle>2.35619449</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.06</min>
            <max>30.0</max>
            <resolution>0.04</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller_back" filename="libgazebo_ros_gpu_laser.so">
          <topicName>/suii/laser/scan_back</topicName>
          <frameName>hokuyo_link_back</frameName>
        </plugin>
      </sensor>
    </gazebo>

    <!-- hokuyo -->
    <gazebo reference="hokuyo_link_front">
      <sensor type="gpu_ray" name="head_hokuyo_sensor_front">
        <pose>-0.244 -0.158 0.15 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>1080</samples>
              <resolution>1</resolution>
              <min_angle>-2.35619449</min_angle>
              <max_angle>2.35619449</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.06</min>
            <max>30.0</max>
            <resolution>0.04</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller_front" filename="libgazebo_ros_gpu_laser.so">
          <topicName>/suii/laser/scan_front</topicName>
          <frameName>hokuyo_link_front</frameName>
        </plugin>
      </sensor>
    </gazebo>

    <!-- sonar -->
    <gazebo reference="sonar_link">
      <sensor type="ray" name="sonar_sensor">
        <pose>0 0 0 0 0 0</pose>
        <update_rate>50</update_rate>
        <ray>
          <scan>
              <horizontal>
                <samples>10</samples>
                <resolution>1.0</resolution>
                <min_angle>-0.01</min_angle>
                <max_angle>0.01</max_angle>
              </horizontal>
              <vertical>
                <samples>10</samples>
                <resolution>1</resolution>
                <min_angle>-0.01</min_angle>
                <max_angle>0.01</max_angle>
              </vertical>
          </scan>
          <range>
              <min>0.01</min>
              <max>3.75</max>
              <resolution>0.02</resolution>
          </range>
        </ray>
        <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
          <gaussianNoise>0.005</gaussianNoise>
          <alwaysOn>true</alwaysOn>
          <updateRate>5</updateRate>
          <topicName>/suii/sonar/scan</topicName>
          <frameName>sonar_link</frameName>
          <visualize>true</visualize>
          <radiation>infrared</radiation>
          <fov>0.2</fov>
        </plugin>
      </sensor>
    </gazebo>

    <!--camera-->
    <gazebo reference="camera_link">
      <mu1>0.2</mu1>
      <mu2>0.2</mu2>
      <material>Gazebo/Red</material>
    </gazebo>

    <gazebo reference="camera_link">
      <sensor name="camera_3D" type="depth">
        <update_rate>60</update_rate>
        <camera>
          <horizontal_fov>1.48353</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>B8G8R8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>5</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller_3D" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>1.0</updateRate>
          <cameraName>camera_3D</cameraName>
          <imageTopicName>/camera_3D/color/image_raw</imageTopicName>
          <cameraInfoTopicName>/camera_3D/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/camera_3D/depth/image_raw</depthImageTopicName>
          <depthImageInfoTopicName>/camera_3D/depth/camera_info</depthImageInfoTopicName>
          <pointCloudTopicName>/camera_3D/depth/points</pointCloudTopicName>
          <frameName>camera_link_optical_3D</frameName>
          <pointCloudCutoff>0.2</pointCloudCutoff>
          <pointCloudCutoffMax>1.5</pointCloudCutoffMax>
          <distortionK1>0.00000001</distortionK1>
          <distortionK2>0.00000001</distortionK2>
          <distortionK3>0.00000001</distortionK3>
          <distortionT1>0.00000001</distortionT1>
          <distortionT2>0.00000001</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
      </sensor>
    </gazebo>

    <!-- camera -->
    <gazebo reference="camera_link">
      <sensor type="camera" name="camera_2D">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.34390352</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller_2D" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera_2D</cameraName>
          <imageTopicName>/camera_2D/image_raw</imageTopicName>
          <cameraInfoTopicName>/camera_2D/camera_info</cameraInfoTopicName>
          <frameName>camera_link_optical_2D</frameName>
          <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
              between the gazebo sensor image and the frame it is supposed to
              be attached to -->
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0.0</Cx>
          <Cy>0.0</Cy>
          <focalLength>0.0</focalLength>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:macro>

</robot>
