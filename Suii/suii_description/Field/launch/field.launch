<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="limited" default="false" doc="If true, limits joint range [-PI, PI] on all joints." />
    <!-- add the Gazebo world so that we launch it all together-->
    <arg name="model" default="$(find table)/urdf/table.urdf"/>
    <arg name="model2" default="$(find rack_bin)/urdf/rack_bin_red.urdf"/>

    <arg name="world" default="robocup_at_work.world"/> 
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" value="true"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find Field)/worlds/robocup_at_work.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <!--by activating "verbose" mode, Gazebo prints more to terminal on launch.-->
    <arg name="verbose" value="$(arg verbose)"/>
    </include>

    <!--load urdf into parameter server-->
    <param name="robot_description" textfile="$(find table)/urdf/table.urdf" />
    <param name="rack_bin_red" textfile="$(find rack_bin)/urdf/rack_bin_red.urdf" />
	
    <node name="urdf_spawner" 
          pkg="gazebo_ros" 
          type="spawn_model" 
          respawn="false" 
          output="screen" 
          args="-x 4.5 -y 0.5 -urdf -model simple_model -param robot_description"/>


    <param name="rack_bin_red" textfile="$(find rack_bin)/urdf/rack_bin_red.urdf" />

      <node name="urdf_spawner_2" 
          pkg="gazebo_ros" 
          type="spawn_model" 
          respawn="false" 
          output="screen" 
          args="-x 0.5 -y 1.5 -urdf -model simple_model2 -param rack_bin_red"/> 

    <!-- load the controllers -->
    <rosparam file="$(find table)/config/config.yaml" command="load"/>

    <node name="controller_spawner" 
          pkg ="controller_manager" 
          type="spawner" 
          ns="/simple_model" 
          args="base_to_second_joint_position_controller joint_velocity_controller"/>



	<!-- converts joint states to TF transforms -->
    <node name="robot_state_publisher" 
          pkg="robot_state_publisher" 
          type="robot_state_publisher" 
          respawn="false" 
          output="screen">
        <remap from="joint_states" to="/simple_model/joint_states" />
    </node>

</launch>
